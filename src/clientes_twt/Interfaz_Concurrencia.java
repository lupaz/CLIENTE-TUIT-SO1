/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientes_twt;

/**
 *
 * @author lupaz
 */

import java.util.TimerTask;
import java.util.Timer;
import javax.swing.JOptionPane;

public class Interfaz_Concurrencia extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz_Concurrencia
     */
    public static int peticionesCorrectas=0;
    public static int peticionesPerdidas=0;
    private static int max_peticiones=0;
    private int total_segundos=0;
    private int segs_timeout=0;
    private int seg_ejecucion=0;
    private int min_ejecucion=0;
    private int hrs_ejecucion=0;
    public static boolean ejecutando=false;
    private Timer timer;
    private TimerTask timerTask; 
    public Interfaz_Concurrencia() {
        initComponents();
        timer = new Timer();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        consola = new javax.swing.JTextArea();
        progreso = new javax.swing.JProgressBar();
        dir_url = new javax.swing.JTextField();
        combo_time = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        no_solicitudes = new javax.swing.JTextField();
        combo_conc = new javax.swing.JComboBox<>();
        nombre_arch = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        horas = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        mins = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        segs = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel1.setText("Ingrese los parametros y opciones para enviar el tr√°fico:");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel2.setText("URL:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel3.setText("Concurrencia:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel4.setText("Solicitudes:");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel5.setText("Parametros:");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel6.setText("Progreso");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel7.setText("Timeout");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel8.setText("Resumen:");

        consola.setColumns(20);
        consola.setRows(5);
        jScrollPane1.setViewportView(consola);

        combo_time.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleciones el tiempo de ejecucion", "2 Minutos", "5 Minutos", "7 minutos", "10 Minutos" }));
        combo_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_timeActionPerformed(evt);
            }
        });

        jButton1.setText("Ejecutar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        combo_conc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione la concurrencia", "1", "2", "3", "4", "5", "6", "7" }));

        jButton2.setText("Cargar");

        jLabel9.setText("Tiempo:");

        horas.setText("00");

        jLabel10.setText(":");

        mins.setText("00");

        jLabel12.setText(":");

        segs.setText("00");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(progreso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(no_solicitudes, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_conc, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dir_url, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nombre_arch)
                                    .addComponent(combo_time, 0, 295, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1))))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(horas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mins)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(segs)
                .addGap(211, 211, 211))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dir_url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(combo_conc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(no_solicitudes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nombre_arch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(combo_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(progreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(horas)
                    .addComponent(jLabel10)
                    .addComponent(mins)
                    .addComponent(jLabel12)
                    .addComponent(segs))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(ejecutando!=true){
            try {
                consola.setText("");
                String url=dir_url.getText();
                int no_concurrencia = Integer.parseInt(combo_conc.getSelectedItem().toString());
                System.out.println("No Concurrencias -> "+no_concurrencia);
                int no_peticiones = Integer.parseInt(no_solicitudes.getText());                
                System.out.println("No perticiones -> "+no_peticiones);
                int timpo_ej =  totalTimepoEj(combo_time.getSelectedIndex());
                System.out.println(" time select-> "+timpo_ej);
                //seteamos las variables;
                progreso.setMinimum(0);
                progreso.setMaximum(no_peticiones);
                max_peticiones=no_peticiones;
                segs_timeout=timpo_ej;
                int pet_por_usuario=no_peticiones/no_concurrencia;
                realizarPeticiones(no_concurrencia,url);                
                ejecutando=true;
                iniciarReloj();        
            } catch (Exception e) {
                System.err.println("Error: Expeccion en la ejecuci√≥n -> "+e.getMessage());
                ejecutando=false;
            }
        }else{
            System.out.println("AVISO: El programa ya se encuentra en ejecuci√≥n");
        }
                
    }//GEN-LAST:event_jButton1ActionPerformed

    private void combo_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_timeActionPerformed

    private void realizarPeticiones(int no_concurrencia,String url) {
        
        switch(no_concurrencia){
            case 1:{
                Persona Luis = new Persona("Luis Paz","Lupaz",url);
                Luis.start();
                break;
            }                
            case 2:{
                Persona Luis = new Persona("Luis Paz","Lupaz",url);
                Persona Zoe = new Persona("Zoe Maria","Zoes",url);
                Luis.start();
                Zoe.start();
                break;
            }
            case 3:{
                Persona Luis = new Persona("Luis Paz","Lupaz",url);
                Persona Zoe = new Persona("Zoe Maria","Zoes",url);
                Persona Elena = new Persona("Elena Ordo√±ez","Haden", url);
                Luis.start();
                Zoe.start();
                Elena.start();
                break;
            }
            case 4:{
                Persona Luis = new Persona("Luis Paz","Lupaz",url);
                Persona Zoe = new Persona("Zoe Maria","Zoes",url);
                Persona Elena = new Persona("Elena Ordo√±ez","Haden", url);
                Persona Mario = new Persona("Mario Paz","Chocopaz", url);
                Luis.start();
                Zoe.start();
                Elena.start();
                Mario.start();
                break;
            }
            case 5:{
                Persona Luis = new Persona("Luis Paz","Lupaz",url);
                Persona Zoe = new Persona("Zoe Maria","Zoes",url);
                Persona Elena = new Persona("Elena Ordo√±ez","Haden", url);
                Persona Mario = new Persona("Mario Paz","Chocopaz", url);
                Persona Maria = new Persona("Maria Garcia","MariaDB", url);
                Luis.start();
                Zoe.start();
                Elena.start();
                Mario.start();
                Maria.start();
                break;
            }
            case 6:{
                Persona Luis = new Persona("Luis Paz","Lupaz",url);
                Persona Zoe = new Persona("Zoe Maria","Zoes",url);
                Persona Elena = new Persona("Elena Ordo√±ez","Haden", url);
                Persona Mario = new Persona("Mario Paz","Chocopaz", url);
                Persona Maria = new Persona("Maria Garcia","MariaDB", url);
                Persona Julio = new Persona("Julio Torres","Jolk", url);
                Luis.start();
                Zoe.start();
                Elena.start();
                Mario.start();
                Maria.start();
                Julio.start();
                break;
            }
            case 7:{
                Persona Luis = new Persona("Luis Paz","Lupaz",url);
                Persona Zoe = new Persona("Zoe Maria","Zoes",url);
                Persona Elena = new Persona("Elena Ordo√±ez","Haden", url);
                Persona Mario = new Persona("Mario Paz","Chocopaz", url);
                Persona Maria = new Persona("Maria Garcia","MariaDB", url);
                Persona Julio = new Persona("Julio Torres","Jolk", url);
                Persona Armando = new Persona("Armando Lios","Arma", url);
                Luis.start();
                Zoe.start();
                Elena.start();
                Mario.start();
                Maria.start();
                Julio.start();
                Armando.start();
                break;
            }
            default:
            {
                System.out.println("No se creo ningun cliente");
            }
            
        }
    }
    
    private int totalTimepoEj(int val){
        switch(val){
            case 1: //2 segundos
                return 120;
            case 2: //5 segundos
                return 300;
            case 3://7 segundos
                return 420;
            case 4:// 10 segundos
                return 600;
            default:
                return 0;
        }
    }
    
    private void acutualizarPorcetnaje(){
         progreso.setValue(peticionesCorrectas+peticionesPerdidas);
    }
    
    private void iniciarReloj(){
        timerTask = new TimerTask()
        {
        public void run()
        {
            seg_ejecucion+=1;
            total_segundos+=1;
            if(seg_ejecucion == 60){
                seg_ejecucion=0;
                min_ejecucion+=1;
            }
            segs.setText(seg_ejecucion+"");
            mins.setText(min_ejecucion+"");
            acutualizarPorcetnaje();
            if(total_segundos >= segs_timeout || (peticionesCorrectas+peticionesPerdidas) >= max_peticiones ){
                //matamos el reloj, reiiciamos las variables
                //matamos los hilos o los interrumpimos
                //cambiamos el valo de la variable en ejecuci√≥n
                ejecutando=false;
                consola.append("Total tiempo: "+min_ejecucion+" min "+seg_ejecucion+" seg\n");
                consola.append("Peticiones Realizadas: "+peticionesCorrectas+peticionesPerdidas+"\n");
                consola.append("Peticiones correctas: "+peticionesCorrectas+"\n");
                consola.append("Peticiones fallidas: "+peticionesPerdidas+"\n");
                peticionesCorrectas=0;
                peticionesPerdidas=0;
                seg_ejecucion=0;
                min_ejecucion=0;
                progreso.setValue(0);
                segs.setText("0");
                mins.setText("0");
                if(total_segundos >= segs_timeout){
                    JOptionPane.showMessageDialog(null,"Tarea finalizada por timeout","TimeOut",JOptionPane.OK_OPTION);                    
                    
                }else{
                    JOptionPane.showMessageDialog(null,"Tarea finalizada, se envio todo el trafico","Completado",JOptionPane.OK_OPTION);
                }
                total_segundos=0;                
                timerTask.cancel();
                timer.purge();
            }
        }
        };
        // Aqu√≠ se pone en marcha el timer cada segundo.
        // Dentro de 0 milisegundos av√≠same cada 1000 milisegundos
        timer.scheduleAtFixedRate(timerTask, 0, 1000);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Concurrencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Concurrencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Concurrencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Concurrencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz_Concurrencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo_conc;
    private javax.swing.JComboBox<String> combo_time;
    private javax.swing.JTextArea consola;
    private javax.swing.JTextField dir_url;
    private javax.swing.JLabel horas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mins;
    private javax.swing.JTextField no_solicitudes;
    private javax.swing.JTextField nombre_arch;
    private javax.swing.JProgressBar progreso;
    private javax.swing.JLabel segs;
    // End of variables declaration//GEN-END:variables

    
}
